{"ast":null,"code":"var _jsxFileName = \"/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/AdjectiveForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdjectiveForm() {\n  // function handleFormSubmit(e) {\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"questionnaire\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      title: \"A singular noun refers to only one person, place, or thing. Some examples include a cat, an idea, a fruit - just make sure to only have 1!\",\n      children: [\"Noun(singular)\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-1-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      title: \"A plural noun refers to more than one person, place, or thing. Examples include 'cats', 'ideas', 'fruits'.\",\n      children: [\"Noun (plural):\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-2-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"W\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-3-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"past-tense-verb\",\n          title: \"A past tense verb is a verb that indicates an action, event, or condition that occurred in the past. For example, 'ran', 'saw', 'was'.\",\n          children: \"Verb (past tense)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Word 4:\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-4-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"adjective\",\n          title: \"An adjective is a word that describes or modifies a noun. It can describe qualities such as size, color, feeling, and more. Examples include 'happy', 'blue', 'large'.\",\n          children: \"Adjective\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\"Word 5:\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-5-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"adjective-2\",\n          title: \"An adjective is a word that describes or modifies a noun. It can describe qualities such as size, color, feeling, and more. Examples include 'happy', 'blue', 'large'.\",\n          children: \"Adjective\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = AdjectiveForm;\nexport default AdjectiveForm;\nvar _c;\n$RefreshReg$(_c, \"AdjectiveForm\");","map":{"version":3,"names":["AdjectiveForm","_jsxDEV","id","children","title","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/AdjectiveForm.js"],"sourcesContent":["function AdjectiveForm() {\n\n    // function handleFormSubmit(e) {\n\n    // }\n\n\n    return (\n        <form id=\"questionnaire\">\n        <li title=\"A singular noun refers to only one person, place, or thing. Some examples include a cat, an idea, a fruit - just make sure to only have 1!\">Noun(singular)\n            <p>\n                <input id=\"question-1-input\" type=\"text\" placeholder=\"answer\"/>\n            </p>\n        </li>\n        <li title=\"A plural noun refers to more than one person, place, or thing. Examples include 'cats', 'ideas', 'fruits'.\">Noun (plural):\n            <p>\n                <input id=\"question-2-input\" type=\"text\" placeholder=\"answer\"/>\n            </p>\n        </li>\n        <li>W\n            <p>\n                <input id=\"question-3-input\" type=\"text\" placeholder=\"answer\"/>\n                <i id=\"past-tense-verb\" title=\"A past tense verb is a verb that indicates an action, event, or condition that occurred in the past. For example, 'ran', 'saw', 'was'.\">Verb (past tense)</i>\n            </p>\n        </li>\n        <li>Word 4:\n            <p>\n                <input id=\"question-4-input\" type=\"text\" placeholder=\"answer\"/>\n                <i id=\"adjective\" title=\"An adjective is a word that describes or modifies a noun. It can describe qualities such as size, color, feeling, and more. Examples include 'happy', 'blue', 'large'.\">Adjective</i>\n            </p>\n        </li>\n        <li>Word 5:\n            <p>\n                <input id=\"question-5-input\" type=\"text\" placeholder=\"answer\"/>\n                <i id=\"adjective-2\" title=\"An adjective is a word that describes or modifies a noun. It can describe qualities such as size, color, feeling, and more. Examples include 'happy', 'blue', 'large'.\">Adjective</i>\n            </p>\n        </li>\n        <p>\n            <button>Submit</button>\n        </p>\n    </form>\n    );\n}\n\nexport default AdjectiveForm;"],"mappings":";;AAAA,SAASA,aAAaA,CAAA,EAAG;EAErB;;EAEA;;EAGA,oBACIC,OAAA;IAAMC,EAAE,EAAC,eAAe;IAAAC,QAAA,gBACxBF,OAAA;MAAIG,KAAK,EAAC,4IAA4I;MAAAD,QAAA,GAAC,gBACnJ,eAAAF,OAAA;QAAAE,QAAA,eACIF,OAAA;UAAOC,EAAE,EAAC,kBAAkB;UAACG,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACLT,OAAA;MAAIG,KAAK,EAAC,4GAA4G;MAAAD,QAAA,GAAC,gBACnH,eAAAF,OAAA;QAAAE,QAAA,eACIF,OAAA;UAAOC,EAAE,EAAC,kBAAkB;UAACG,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACLT,OAAA;MAAAE,QAAA,GAAI,GACA,eAAAF,OAAA;QAAAE,QAAA,gBACIF,OAAA;UAAOC,EAAE,EAAC,kBAAkB;UAACG,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC/DT,OAAA;UAAGC,EAAE,EAAC,iBAAiB;UAACE,KAAK,EAAC,wIAAwI;UAAAD,QAAA,EAAC;QAAiB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7L,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACLT,OAAA;MAAAE,QAAA,GAAI,SACA,eAAAF,OAAA;QAAAE,QAAA,gBACIF,OAAA;UAAOC,EAAE,EAAC,kBAAkB;UAACG,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC/DT,OAAA;UAAGC,EAAE,EAAC,WAAW;UAACE,KAAK,EAAC,wKAAwK;UAAAD,QAAA,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/M,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACLT,OAAA;MAAAE,QAAA,GAAI,SACA,eAAAF,OAAA;QAAAE,QAAA,gBACIF,OAAA;UAAOC,EAAE,EAAC,kBAAkB;UAACG,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC/DT,OAAA;UAAGC,EAAE,EAAC,aAAa;UAACE,KAAK,EAAC,wKAAwK;UAAAD,QAAA,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACLT,OAAA;MAAAE,QAAA,eACIF,OAAA;QAAAE,QAAA,EAAQ;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACC,EAAA,GA1CQX,aAAa;AA4CtB,eAAeA,aAAa;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}