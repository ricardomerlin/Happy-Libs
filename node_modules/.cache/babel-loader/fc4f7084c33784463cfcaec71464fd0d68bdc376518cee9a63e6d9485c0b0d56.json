{"ast":null,"code":"var _jsxFileName = \"/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/Posts.js\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts({\n  stories,\n  getStories\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const [storyMemes, setStoryMemes] = useState([]);\n  const [memeLinks, setMemeLinks] = useState([]);\n  useEffect(() => {\n    const newStoryMemes = stories.map(() => memeLinks[Math.floor(Math.random() * memeLinks.length)].link);\n    console.log(newStoryMemes);\n    setStoryMemes(newStoryMemes);\n  }, [stories]);\n  useEffect(() => {\n    fetch('http://localhost:3000/memes').then(response => response.json()).then(data => setMemeLinks(data));\n  }, []);\n  const mappedStories = _s(stories.flatMap(_s((story, index) => {\n    _s();\n    const [postIsLiked, setPostIsLiked] = useState(false);\n    function handleLike(story, e) {\n      e.preventDefault();\n      console.log('Like button clicked');\n      fetch(`http://localhost:3000/custom_stories/${story.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"likes\": story.likes + 1\n        })\n      }).then(() => getStories());\n      setPostIsLiked(true);\n    }\n    function getRandomColor() {\n      const letters = '89ABCDEF';\n      let color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 8)];\n      }\n      return color;\n    }\n    const backgroundColor = getRandomColor();\n    const storyCard = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"individual-card\",\n      style: {\n        backgroundColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: story.story\n      }, story.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD805\\uDDCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Likes: \", story.likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), postIsLiked ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Post Liked!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"like-button\",\n        onClick: e => handleLike(story, e),\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n    if (index % 4 === 3) {\n      const memeCard = /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card individual-card text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: storyMemes[index],\n          alt: \"Meme\",\n          style: {\n            width: '100%'\n          }\n        }, storyMemes[index], false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n      return [storyCard, memeCard];\n    } else {\n      return storyCard;\n    }\n  }, \"GTLZaIMXhRSIvtPelByVYgn6q1s=\")), \"GTLZaIMXhRSIvtPelByVYgn6q1s=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: mappedStories\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s2(Posts, \"Q0q6O29dVQ8TPfbCetaCUtnw0lw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Posts","stories","getStories","_s2","_s","$RefreshSig$","storyMemes","setStoryMemes","memeLinks","setMemeLinks","newStoryMemes","map","Math","floor","random","length","link","console","log","fetch","then","response","json","data","mappedStories","flatMap","story","index","postIsLiked","setPostIsLiked","handleLike","e","preventDefault","id","method","headers","body","JSON","stringify","likes","getRandomColor","letters","color","i","backgroundColor","storyCard","class","style","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","memeCard","src","alt","width","_c","$RefreshReg$"],"sources":["/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/Posts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction Posts({ stories, getStories }) {\n\n    const [storyMemes, setStoryMemes] = useState([]);\n    const [memeLinks, setMemeLinks] = useState([])\n    \n    useEffect(() => {\n        const newStoryMemes = stories.map(() => memeLinks[Math.floor(Math.random() * memeLinks.length)].link);\n        console.log(newStoryMemes)\n        setStoryMemes(newStoryMemes);\n    }, [stories]);\n    \n    useEffect(() => {\n        fetch('http://localhost:3000/memes')\n        .then(response => response.json())\n        .then(data => setMemeLinks(data));\n    }, []);\n    \n    \n    \n    \n    const mappedStories = stories.flatMap((story, index) => {\n        \n        const [postIsLiked, setPostIsLiked] = useState(false);\n        \n        function handleLike(story, e) {\n            e.preventDefault();\n            console.log('Like button clicked');\n            fetch(`http://localhost:3000/custom_stories/${story.id}`, {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    \"likes\": story.likes + 1\n                })\n            })\n            .then(() => getStories());\n            setPostIsLiked(true);\n        }\n\n        function getRandomColor() {\n            const letters = '89ABCDEF';\n            let color = '#';\n            for (let i = 0; i < 6; i++) {\n              color += letters[Math.floor(Math.random() * 8)];\n            }\n            return color;\n        }\n\n        const backgroundColor = getRandomColor();\n\n        const storyCard = (\n            <div class='individual-card' style={{ backgroundColor }}>                \n                <p key={story.id}>{story.story}</p>\n                <p>ð‘—Š</p>\n                <p>Likes: {story.likes}</p>\n                {postIsLiked ? <p>Post Liked!</p> : <button className=\"like-button\" onClick={(e) => handleLike(story, e)}>Like</button> }\n            </div>\n        );\n\n        if (index % 4 === 3) {\n            const memeCard = (\n                <div class='card individual-card text-center'>\n                <img src={storyMemes[index]} key={storyMemes[index]} alt=\"Meme\" style={{width:'100%'}}/>\n                </div>\n            );\n            return [storyCard, memeCard];\n        } else {\n            return storyCard;\n        }\n    })\n\n    return (\n        <div className=\"posts-container\">\n            {mappedStories}\n        </div>\n    );\n}\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}