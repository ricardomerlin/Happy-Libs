{"ast":null,"code":"var _jsxFileName = \"/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts({\n  stories,\n  getStories\n}) {\n  _s();\n  const [storyMemes, setStoryMemes] = useState([]);\n  const [memeLinks, setMemeLinks] = useState([]);\n  const [postIsLiked, setPostIsLiked] = useState(false);\n  useEffect(() => {\n    const newStoryMemes = stories.map(() => memeLinks[Math.floor(Math.random() * memeLinks.length)].link);\n    console.log(newStoryMemes);\n    setStoryMemes(newStoryMemes);\n  }, [stories]);\n  useEffect(() => {\n    fetch('http://localhost:3000/memes').then(response => response.json()).then(data => setMemeLinks(data));\n  }, []);\n  function handleLike(story, e) {\n    e.preventDefault();\n    console.log('Like button clicked');\n    fetch(`http://localhost:3000/custom_stories/${story.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"likes\": story.likes + 1\n      })\n    }).then(() => getStories());\n    story.liked = true;\n  }\n  const mappedStories = stories.flatMap((story, index) => {\n    function getRandomColor() {\n      const letters = '89ABCDEF';\n      let color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 8)];\n      }\n      return color;\n    }\n    const backgroundColor = getRandomColor();\n    const storyCard = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"individual-card\",\n      style: {\n        backgroundColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: story.story\n      }, story.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD805\\uDDCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Likes: \", story.likes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), story.liked ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Post Liked!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"like-button\",\n        onClick: e => handleLike(story, e),\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n    if (index % 4 === 3) {\n      const memeCard = /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card individual-card text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: storyMemes[index],\n          alt: \"Meme\",\n          style: {\n            width: '100%'\n          }\n        }, storyMemes[index], false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n      return [storyCard, memeCard];\n    } else {\n      return storyCard;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: mappedStories\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"rJgQfKv4RolINpm37leYxblDeDg=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Posts","stories","getStories","_s","storyMemes","setStoryMemes","memeLinks","setMemeLinks","postIsLiked","setPostIsLiked","newStoryMemes","map","Math","floor","random","length","link","console","log","fetch","then","response","json","data","handleLike","story","e","preventDefault","id","method","headers","body","JSON","stringify","likes","liked","mappedStories","flatMap","index","getRandomColor","letters","color","i","backgroundColor","storyCard","class","style","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","memeCard","src","alt","width","_c","$RefreshReg$"],"sources":["/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/Posts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction Posts({ stories, getStories }) {\n\n    const [storyMemes, setStoryMemes] = useState([]);\n    const [memeLinks, setMemeLinks] = useState([])\n    const [postIsLiked, setPostIsLiked] = useState(false);\n\n    useEffect(() => {\n        const newStoryMemes = stories.map(() => memeLinks[Math.floor(Math.random() * memeLinks.length)].link);\n        console.log(newStoryMemes)\n        setStoryMemes(newStoryMemes);\n    }, [stories]);\n\n    useEffect(() => {\n        fetch('http://localhost:3000/memes')\n            .then(response => response.json())\n            .then(data => setMemeLinks(data));\n    }, []);\n\n    function handleLike(story, e) {\n        e.preventDefault();\n        console.log('Like button clicked');\n        fetch(`http://localhost:3000/custom_stories/${story.id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"likes\": story.likes + 1\n            })\n        })\n        .then(() => getStories());\n        story.liked = true;\n    }\n\n\n\n    const mappedStories = stories.flatMap((story, index) => {\n\n\n\n        function getRandomColor() {\n            const letters = '89ABCDEF';\n            let color = '#';\n            for (let i = 0; i < 6; i++) {\n              color += letters[Math.floor(Math.random() * 8)];\n            }\n            return color;\n        }\n\n        const backgroundColor = getRandomColor();\n\n        const storyCard = (\n            <div class='individual-card' style={{ backgroundColor }}>                \n                <p key={story.id}>{story.story}</p>\n                <p>ð‘—Š</p>\n                <p>Likes: {story.likes}</p>\n                {story.liked ? <p>Post Liked!</p> : <button className=\"like-button\" onClick={(e) => handleLike(story, e)}>Like</button> }\n            </div>\n        );\n\n        if (index % 4 === 3) {\n            const memeCard = (\n                <div class='card individual-card text-center'>\n                <img src={storyMemes[index]} key={storyMemes[index]} alt=\"Meme\" style={{width:'100%'}}/>\n                </div>\n            );\n            return [storyCard, memeCard];\n        } else {\n            return storyCard;\n        }\n    })\n\n    return (\n        <div className=\"posts-container\">\n            {mappedStories}\n        </div>\n    );\n}\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}