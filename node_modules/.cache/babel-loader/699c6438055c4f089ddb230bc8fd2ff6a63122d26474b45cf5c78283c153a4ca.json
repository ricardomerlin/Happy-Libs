{"ast":null,"code":"var _jsxFileName = \"/Users/ricardomerlin/coding-projects/HappyLibs/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Posts({\n  stories,\n  getStories\n}) {\n  _s();\n  const [storyMemes, setStoryMemes] = useState([]);\n  const [memeLinks, setMemeLinks] = useState([]);\n  const [likedPosts, setLikedPosts] = useState({});\n  const [memesInitialized, setMemesInitialized] = useState(false);\n  useEffect(() => {\n    if (!memesInitialized && stories.length > 0 && memeLinks.length > 0) {\n      const newStoryMemes = stories.map(() => memeLinks[Math.floor(Math.random() * memeLinks.length)].link);\n      setStoryMemes(newStoryMemes);\n      setMemesInitialized(true);\n    }\n  }, [stories, memeLinks, memesInitialized]);\n  useEffect(() => {\n    fetch('http://localhost:3000/memes').then(response => response.json()).then(data => setMemeLinks(data));\n  }, []);\n  function generateLightColor() {\n    const hue = Math.floor(Math.random() * 360);\n    const saturation = 30 + Math.random() * 40;\n    const lightness = 70 + Math.random() * 30;\n    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n  }\n  function handleLike(storyId) {\n    console.log('Like button clicked for story with id:', storyId);\n    fetch(`http://localhost:3000/custom_stories/${storyId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"likes\": stories.find(story => story.id === storyId).likes + 1\n      })\n    }).then(() => getStories());\n    setLikedPosts(prevLikedPosts => ({\n      ...prevLikedPosts,\n      [storyId]: true\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [...stories].reverse().map((story, index) => {\n      const memeLink = storyMemes[index] || memeLinks[Math.floor(Math.random() * memeLinks.length)].link;\n      if ((index + 1) % 5 === 0 && !storyMemes[index]) {\n        setStoryMemes(prevStoryMemes => [...prevStoryMemes, memeLink]);\n      }\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"individual-card\",\n          style: {\n            backgroundColor: generateLightColor()\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: story.story\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD805\\uDDCA \\uD805\\uDDCA \\uD805\\uDDCA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), story.likes === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [story.likes, \" Like\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 52\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [story.likes, \" Likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 80\n          }, this), likedPosts[story.id] ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Post Liked!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 53\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"like-button\",\n            onClick: () => handleLike(story.id),\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 74\n          }, this)]\n        }, story.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), (index + 1) % 5 === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card individual-card\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: memeLink,\n            alt: \"Meme\",\n            style: {\n              height: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this)\n        }, `meme-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"84IE7SVAayRy48UgL1Imqcnxg5k=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","stories","getStories","_s","storyMemes","setStoryMemes","memeLinks","setMemeLinks","likedPosts","setLikedPosts","memesInitialized","setMemesInitialized","length","newStoryMemes","map","Math","floor","random","link","fetch","then","response","json","data","generateLightColor","hue","saturation","lightness","handleLike","storyId","console","log","method","headers","body","JSON","stringify","find","story","id","likes","prevLikedPosts","className","children","reverse","index","memeLink","prevStoryMemes","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","height","_c","$RefreshReg$"],"sources":["/Users/ricardomerlin/coding-projects/HappyLibs/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Posts({ stories, getStories }) {\n    const [storyMemes, setStoryMemes] = useState([]);\n    const [memeLinks, setMemeLinks] = useState([]);\n    const [likedPosts, setLikedPosts] = useState({});\n    const [memesInitialized, setMemesInitialized] = useState(false);\n\n\n    useEffect(() => {\n        if (!memesInitialized && stories.length > 0 && memeLinks.length > 0) {\n            const newStoryMemes = stories.map(() => memeLinks[Math.floor(Math.random() * memeLinks.length)].link);\n            setStoryMemes(newStoryMemes);\n            setMemesInitialized(true);\n        }\n    }, [stories, memeLinks, memesInitialized]);\n\n    useEffect(() => {\n        fetch('http://localhost:3000/memes')\n            .then(response => response.json())\n            .then(data => setMemeLinks(data));\n    }, []);\n\n    function generateLightColor() {\n        const hue = Math.floor(Math.random() * 360);\n        const saturation = 30 + Math.random() * 40;\n        const lightness = 70 + Math.random() * 30;\n        return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n    }\n\n    function handleLike(storyId) {\n        console.log('Like button clicked for story with id:', storyId);\n        fetch(`http://localhost:3000/custom_stories/${storyId}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"likes\": stories.find(story => story.id === storyId).likes + 1\n            })\n        })\n        .then(() => getStories());\n        \n        setLikedPosts(prevLikedPosts => ({\n            ...prevLikedPosts,\n            [storyId]: true\n        }));\n    }\n\n    return (\n        <div className=\"posts-container\">\n            {[...stories].reverse().map((story, index) => {\n                const memeLink = storyMemes[index] || memeLinks[Math.floor(Math.random() * memeLinks.length)].link;\n                if ((index + 1) % 5 === 0 && !storyMemes[index]) {\n                    setStoryMemes(prevStoryMemes => [...prevStoryMemes, memeLink]);\n                }\n                return (\n                    <>\n                        <div className='individual-card' style={{ backgroundColor: generateLightColor() }} key={story.id}>\n                            <p><strong>{story.story}</strong></p>\n                            <p>ð‘—Š ð‘—Š ð‘—Š</p>\n                            {(story.likes === 1) ? <p>{story.likes} Like</p> : <p>{story.likes} Likes</p>}\n                            {likedPosts[story.id] ? <p>Post Liked!</p> : <button className=\"like-button\" onClick={() => handleLike(story.id)}>Like</button>}\n                        </div>\n                        {(index + 1) % 5 === 0 && (\n                            <div className='card individual-card' key={`meme-${index}`}>\n                                <img src={memeLink} alt=\"Meme\" style={{ height: '100%' }} />\n                            </div>\n                        )}\n                    </>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default Posts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}