{"ast":null,"code":"var _jsxFileName = \"/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/Posts.js\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts({\n  stories\n}) {\n  console.log(stories);\n  const memes = ['https://www.boredpanda.com/blog/wp-content/uploads/2024/01/clipimage-659ea013b9518__700.jpg'];\n  let memeIndex = 0;\n  const mappedStories = stories.flatMap((story, index) => {\n    // Create a new Date object from the story's created_at string\n    const date = new Date(story.created_at);\n    const formattedDate = `${date.toLocaleString('default', {\n      month: 'long'\n    })} ${date.getDate()}, ${date.getFullYear()} at ${date.getHours() > 12 ? date.getHours() - 12 : date.getHours()}:${date.getMinutes() > 9 ? date.getMinutes() : '0' + date.getMinutes()} ${date.getHours() > 12 ? 'PM' : 'AM'}`;\n    function getRandomColor() {\n      const letters = '89ABCDEF';\n      let color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 8)];\n      }\n      return color;\n    }\n    const backgroundColor = getRandomColor();\n    const storyCard = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      className: \"individual-card text-center\",\n      style: {\n        backgroundColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        class: \"card-body\",\n        className: \"text-center\",\n        children: story.content\n      }, story.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: [\"Posted on \", formattedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"like-button\",\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n    if (index % 4 === 3) {\n      const memeCard = /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        className: \"individual-card text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: memes[memeIndex % memes.length],\n          alt: \"Meme\",\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n      memeIndex++;\n      return [storyCard, memeCard];\n    } else {\n      return storyCard;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: mappedStories\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Posts","stories","console","log","memes","memeIndex","mappedStories","flatMap","story","index","date","Date","created_at","formattedDate","toLocaleString","month","getDate","getFullYear","getHours","getMinutes","getRandomColor","letters","color","i","Math","floor","random","backgroundColor","storyCard","class","className","style","children","content","id","fileName","_jsxFileName","lineNumber","columnNumber","memeCard","src","length","alt","width","_c","$RefreshReg$"],"sources":["/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/Posts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction Posts({ stories }) {\n\n    console.log(stories)\n\n    const memes = [\n        'https://www.boredpanda.com/blog/wp-content/uploads/2024/01/clipimage-659ea013b9518__700.jpg'\n    ];\n\n    let memeIndex = 0;\n\n    const mappedStories = stories.flatMap((story, index) => {\n\n        // Create a new Date object from the story's created_at string\n        const date = new Date(story.created_at);\n\n        const formattedDate = `${date.toLocaleString('default', { month: 'long' })} ${date.getDate()}, ${date.getFullYear()} at ${(date.getHours() > 12) ? date.getHours() - 12 : date.getHours()}:${(date.getMinutes() > 9 ? date.getMinutes() : '0' + date.getMinutes())} ${(date.getHours() > 12) ? 'PM' : 'AM'}`;\n\n        function getRandomColor() {\n            const letters = '89ABCDEF';\n            let color = '#';\n            for (let i = 0; i < 6; i++) {\n              color += letters[Math.floor(Math.random() * 8)];\n            }\n            return color;\n        }\n\n        const backgroundColor = getRandomColor();\n\n        const storyCard = (\n            <div class='card' className=\"individual-card text-center\" style={{ backgroundColor }}>\n                <h3 class=\"card-body\" className=\"text-center\" key={story.id}>{story.content}</h3>\n                <br></br>\n                <p className=\"text-center\">Posted on {formattedDate}</p>\n                <button className=\"like-button\">Like</button>\n            </div>\n        );\n\n        if (index % 4 === 3) {\n            const memeCard = (\n                <div class='card' className=\"individual-card text-center\">\n                    <img src={memes[memeIndex % memes.length]} alt=\"Meme\" style={{width:'100%'}}/>\n                </div>\n            );\n            memeIndex++;\n            return [storyCard, memeCard];\n        } else {\n            return storyCard;\n        }\n    })\n\n    return (\n        <div className=\"posts-container\">\n            {mappedStories}\n        </div>\n    );\n}\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}