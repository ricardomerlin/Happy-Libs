{"ast":null,"code":"var _jsxFileName = \"/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/Posts.js\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts({\n  stories\n}) {\n  console.log(stories);\n  const mappedStories = stories.map(story => {\n    // Create a new Date object from the story's created_at string\n    const date = new Date(story.created_at);\n\n    // Format the date into the desired format\n    const formattedDate = `${date.toLocaleString('default', {\n      month: 'long'\n    })} ${date.getDate()}, ${date.getFullYear()} at ${date.getHours() > 12 ? date.getHours() - 12 : date.getHours()}:${date.getMinutes() > 9 ? date.getMinutes() : '0' + date.getMinutes()} ${date.getHours() > 12 ? 'PM' : 'AM'}`;\n    function getRandomColor() {\n      const letters = '0123456789ABCDEF';\n      let color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n      return color;\n    }\n    const mappedStories = stories.map(story => {\n      // ...\n      const backgroundColor = getRandomColor();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        className: \"individual-card text-center\",\n        style: {\n          backgroundColor\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      className: \"individual-card text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        class: \"card-body\",\n        className: \"text-center\",\n        children: story.content\n      }, story.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: [\"Posted on \", formattedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"like-button\",\n        children: \"Like\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: mappedStories\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Posts","stories","console","log","mappedStories","map","story","date","Date","created_at","formattedDate","toLocaleString","month","getDate","getFullYear","getHours","getMinutes","getRandomColor","letters","color","i","Math","floor","random","backgroundColor","class","className","style","fileName","_jsxFileName","lineNumber","columnNumber","children","content","id","_c","$RefreshReg$"],"sources":["/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/Posts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction Posts({ stories }) {\n\n    console.log(stories)\n\n    const mappedStories = stories.map(story => {\n\n        // Create a new Date object from the story's created_at string\n        const date = new Date(story.created_at);\n\n        // Format the date into the desired format\n        const formattedDate = `${date.toLocaleString('default', { month: 'long' })} ${date.getDate()}, ${date.getFullYear()} at ${(date.getHours() > 12) ? date.getHours() - 12 : date.getHours()}:${(date.getMinutes() > 9 ? date.getMinutes() : '0' + date.getMinutes())} ${(date.getHours() > 12) ? 'PM' : 'AM'}`;\n\n        function getRandomColor() {\n            const letters = '0123456789ABCDEF';\n            let color = '#';\n            for (let i = 0; i < 6; i++) {\n              color += letters[Math.floor(Math.random() * 16)];\n            }\n            return color;\n        }\n\n        const mappedStories = stories.map(story => {\n            // ...\n            const backgroundColor = getRandomColor();\n        \n            return (\n            <div class='card' className=\"individual-card text-center\" style={{ backgroundColor }}>\n                {/* ... */}\n            </div>\n            )\n        })\n\n        return (\n            <div class='card' className=\"individual-card text-center\">\n                <h3 class=\"card-body\" className=\"text-center\" key={story.id}>{story.content}</h3>\n                <br></br>\n                <p className=\"text-center\">Posted on {formattedDate}</p>\n                <button className=\"like-button\">Like</button>\n            </div>\n        )\n    })\n\n    return (\n        <div className=\"posts-container\">\n            {mappedStories}\n        </div>\n    );\n}\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}