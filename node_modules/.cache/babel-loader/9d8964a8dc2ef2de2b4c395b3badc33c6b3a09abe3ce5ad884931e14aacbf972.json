{"ast":null,"code":"var _jsxFileName = \"/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Posts({\n  stories,\n  getStories\n}) {\n  _s();\n  const [storyMemes, setStoryMemes] = useState([]);\n  const [memeLinks, setMemeLinks] = useState([]);\n  const [likedPosts, setLikedPosts] = useState({});\n  useEffect(() => {\n    const newStoryMemes = stories.map(() => memeLinks[Math.floor(Math.random() * memeLinks.length)].link);\n    setStoryMemes(newStoryMemes);\n  }, []);\n  useEffect(() => {\n    if (stories.length > 0 && memeLinks.length > 0) {\n      const newStoryMemes = stories.map(() => memeLinks[Math.floor(Math.random() * memeLinks.length)].link);\n      setStoryMemes(newStoryMemes);\n    }\n  }, [memeLinks]);\n  function handleLike(storyId) {\n    console.log('Like button clicked for story with id:', storyId);\n    fetch(`http://localhost:3000/custom_stories/${storyId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"likes\": stories.find(story => story.id === storyId).likes + 1\n      })\n    }).then(() => getStories());\n    setLikedPosts(prevLikedPosts => ({\n      ...prevLikedPosts,\n      [storyId]: true\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: stories.map((story, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"individual-card\",\n        style: {\n          backgroundColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: story.story\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD805\\uDDCA \\uD805\\uDDCA \\uD805\\uDDCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), story.likes === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [story.likes, \" Like\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 48\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [story.likes, \" Likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 76\n        }, this), likedPosts[story.id] ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Post Liked!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 49\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"like-button\",\n          onClick: () => handleLike(story.id),\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 70\n        }, this)]\n      }, story.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), (index + 1) % 5 === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card individual-card text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: storyMemes[index],\n          alt: \"Meme\",\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)\n      }, `meme-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"1WuFz2RWHlYo9Di8TGzPcAenpUE=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","stories","getStories","_s","storyMemes","setStoryMemes","memeLinks","setMemeLinks","likedPosts","setLikedPosts","newStoryMemes","map","Math","floor","random","length","link","handleLike","storyId","console","log","fetch","method","headers","body","JSON","stringify","find","story","id","likes","then","prevLikedPosts","className","children","index","style","backgroundColor","toString","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","width","_c","$RefreshReg$"],"sources":["/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Posts({ stories, getStories }) {\n    const [storyMemes, setStoryMemes] = useState([]);\n    const [memeLinks, setMemeLinks] = useState([]);\n    const [likedPosts, setLikedPosts] = useState({});\n\n    useEffect(() => {\n        const newStoryMemes = stories.map(() => memeLinks[Math.floor(Math.random() * memeLinks.length)].link);\n        setStoryMemes(newStoryMemes);\n    }, []);\n\n    useEffect(() => {\n        if (stories.length > 0 && memeLinks.length > 0) {\n            const newStoryMemes = stories.map(() => memeLinks[Math.floor(Math.random() * memeLinks.length)].link);\n            setStoryMemes(newStoryMemes);\n        }\n    }, [memeLinks]);\n\n    function handleLike(storyId) {\n        console.log('Like button clicked for story with id:', storyId);\n        fetch(`http://localhost:3000/custom_stories/${storyId}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"likes\": stories.find(story => story.id === storyId).likes + 1\n            })\n        })\n        .then(() => getStories());\n        \n        setLikedPosts(prevLikedPosts => ({\n            ...prevLikedPosts,\n            [storyId]: true\n        }));\n    }\n\n    return (\n        <div className=\"posts-container\">\n            {stories.map((story, index) => (\n                <>\n                    <div className='individual-card' style={{ backgroundColor: `#${Math.floor(Math.random()*16777215).toString(16)}` }} key={story.id}>\n                        <p><strong>{story.story}</strong></p>\n                        <p>ð‘—Š ð‘—Š ð‘—Š</p>\n                        {(story.likes === 1) ? <p>{story.likes} Like</p> : <p>{story.likes} Likes</p>}\n                        {likedPosts[story.id] ? <p>Post Liked!</p> : <button className=\"like-button\" onClick={() => handleLike(story.id)}>Like</button>}\n                    </div>\n                    {(index + 1) % 5 === 0 && (\n                        <div className='card individual-card text-center' key={`meme-${index}`}>\n                            <img src={storyMemes[index]} alt=\"Meme\" style={{ width: '100%' }} />\n                        </div>\n                    )}\n                </>\n            ))}\n        </div>\n    );\n}\n\nexport default Posts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}