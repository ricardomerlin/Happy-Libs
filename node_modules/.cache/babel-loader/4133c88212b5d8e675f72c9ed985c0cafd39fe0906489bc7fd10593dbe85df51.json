{"ast":null,"code":"var _jsxFileName = \"/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/AdjectiveForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdjectiveForm() {\n  _s();\n  const [question1, setQuestion1] = useState('');\n  function handleFormSubmit(e) {}\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"questionnaire\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      title: \"A singular noun refers to only one person, place, or thing. Some examples include a cat, an idea, a fruit - just make sure to only have 1!\",\n      children: [\"Noun(singular)\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-1-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      title: \"A plural noun refers to more than one person, place, or thing. Examples include 'cats', 'ideas', 'fruits'.\",\n      children: [\"Noun (plural):\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-2-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      title: \"A past tense verb is a verb that indicates an action, event, or condition that occurred in the past. For example, 'ran', 'saw', 'was'.\",\n      children: [\"Verb (past tense):\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-3-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      title: \"An adjective is a word that describes or modifies a noun. It can describe qualities such as size, color, feeling, and more. Examples include 'happy', 'blue', 'large'.\",\n      children: [\"Adjective:\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-4-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      title: \"An adjective is a word that describes or modifies a noun. It can describe qualities such as size, color, feeling, and more. Examples include 'happy', 'blue', 'large'.\",\n      children: [\"Adjective:\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-5-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(AdjectiveForm, \"T3W/DM9irqJLicH7qfmnZGXJkGY=\");\n_c = AdjectiveForm;\nexport default AdjectiveForm;\nvar _c;\n$RefreshReg$(_c, \"AdjectiveForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdjectiveForm","_s","question1","setQuestion1","handleFormSubmit","e","id","children","title","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/AdjectiveForm.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nfunction AdjectiveForm() {\n\n    const [question1, setQuestion1] = useState('');\n\n    function handleFormSubmit(e) {\n\n    }\n\n\n    return (\n        <form id=\"questionnaire\">\n            <li title=\"A singular noun refers to only one person, place, or thing. Some examples include a cat, an idea, a fruit - just make sure to only have 1!\">Noun(singular)\n                <p>\n                    <input id=\"question-1-input\" type=\"text\" placeholder=\"answer\"/>\n                </p>\n            </li>\n            <li title=\"A plural noun refers to more than one person, place, or thing. Examples include 'cats', 'ideas', 'fruits'.\">Noun (plural):\n                <p>\n                    <input id=\"question-2-input\" type=\"text\" placeholder=\"answer\"/>\n                </p>\n            </li>\n            <li title=\"A past tense verb is a verb that indicates an action, event, or condition that occurred in the past. For example, 'ran', 'saw', 'was'.\">Verb (past tense):\n                <p>\n                    <input id=\"question-3-input\" type=\"text\" placeholder=\"answer\"/>\n                </p>\n            </li>\n            <li title=\"An adjective is a word that describes or modifies a noun. It can describe qualities such as size, color, feeling, and more. Examples include 'happy', 'blue', 'large'.\">Adjective:\n                <p>\n                    <input id=\"question-4-input\" type=\"text\" placeholder=\"answer\"/>\n                </p>\n            </li>\n            <li title=\"An adjective is a word that describes or modifies a noun. It can describe qualities such as size, color, feeling, and more. Examples include 'happy', 'blue', 'large'.\">Adjective:\n                <p>\n                    <input id=\"question-5-input\" type=\"text\" placeholder=\"answer\"/>\n                </p>\n            </li>\n            <p>\n                <button>Submit</button>\n            </p>\n        </form>\n    );\n}\n\nexport default AdjectiveForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}