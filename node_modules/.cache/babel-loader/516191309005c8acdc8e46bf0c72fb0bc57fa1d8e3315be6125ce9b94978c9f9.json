{"ast":null,"code":"var _jsxFileName = \"/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Posts({\n  stories,\n  getStories\n}) {\n  _s();\n  const [storyMemes, setStoryMemes] = useState([]);\n  const [memeLinks, setMemeLinks] = useState([]);\n  const [likedPosts, setLikedPosts] = useState({});\n  const [memesInitialized, setMemesInitialized] = useState(false);\n  useEffect(() => {\n    if (!memesInitialized && stories.length > 0 && memeLinks.length > 0) {\n      const newStoryMemes = stories.map(() => memeLinks[Math.floor(Math.random() * memeLinks.length)].link);\n      setStoryMemes(newStoryMemes);\n      setMemesInitialized(true);\n    }\n  }, [stories, memeLinks, memesInitialized]);\n  useEffect(() => {\n    fetch('http://localhost:3000/memes').then(response => response.json()).then(data => setMemeLinks(data));\n  }, []);\n  function handleLike(storyId) {\n    console.log('Like button clicked for story with id:', storyId);\n    fetch(`http://localhost:3000/custom_stories/${storyId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"likes\": stories.find(story => story.id === storyId).likes + 1\n      })\n    }).then(() => getStories());\n    setLikedPosts(prevLikedPosts => ({\n      ...prevLikedPosts,\n      [storyId]: true\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: stories.map((story, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"individual-card\",\n        style: {\n          backgroundColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: story.story\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD805\\uDDCA \\uD805\\uDDCA \\uD805\\uDDCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), story.likes === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [story.likes, \" Like\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 48\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [story.likes, \" Likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 76\n        }, this), likedPosts[story.id] ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Post Liked!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 49\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"like-button\",\n          onClick: () => handleLike(story.id),\n          children: \"Like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 70\n        }, this)]\n      }, story.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), (index + 1) % 5 === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card individual-card\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: storyMemes[index],\n          alt: \"Meme\",\n          style: {\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)\n      }, `meme-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"84IE7SVAayRy48UgL1Imqcnxg5k=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Posts","stories","getStories","_s","storyMemes","setStoryMemes","memeLinks","setMemeLinks","likedPosts","setLikedPosts","memesInitialized","setMemesInitialized","length","newStoryMemes","map","Math","floor","random","link","fetch","then","response","json","data","handleLike","storyId","console","log","method","headers","body","JSON","stringify","find","story","id","likes","prevLikedPosts","className","children","index","style","backgroundColor","toString","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","height","_c","$RefreshReg$"],"sources":["/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/Posts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Posts({ stories, getStories }) {\n    const [storyMemes, setStoryMemes] = useState([]);\n    const [memeLinks, setMemeLinks] = useState([]);\n    const [likedPosts, setLikedPosts] = useState({});\n    const [memesInitialized, setMemesInitialized] = useState(false);\n\n\n    useEffect(() => {\n        if (!memesInitialized && stories.length > 0 && memeLinks.length > 0) {\n            const newStoryMemes = stories.map(() => memeLinks[Math.floor(Math.random() * memeLinks.length)].link);\n            setStoryMemes(newStoryMemes);\n            setMemesInitialized(true);\n        }\n    }, [stories, memeLinks, memesInitialized]);\n\n    useEffect(() => {\n        fetch('http://localhost:3000/memes')\n            .then(response => response.json())\n            .then(data => setMemeLinks(data));\n    }, []);\n\n    function handleLike(storyId) {\n        console.log('Like button clicked for story with id:', storyId);\n        fetch(`http://localhost:3000/custom_stories/${storyId}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                \"likes\": stories.find(story => story.id === storyId).likes + 1\n            })\n        })\n        .then(() => getStories());\n        \n        setLikedPosts(prevLikedPosts => ({\n            ...prevLikedPosts,\n            [storyId]: true\n        }));\n    }\n\n    return (\n        <div className=\"posts-container\">\n            {stories.map((story, index) => (\n                <>\n                    <div className='individual-card' style={{ backgroundColor: `#${Math.floor(Math.random()*16777215).toString(16)}` }} key={story.id}>\n                        <p><strong>{story.story}</strong></p>\n                        <p>ð‘—Š ð‘—Š ð‘—Š</p>\n                        {(story.likes === 1) ? <p>{story.likes} Like</p> : <p>{story.likes} Likes</p>}\n                        {likedPosts[story.id] ? <p>Post Liked!</p> : <button className=\"like-button\" onClick={() => handleLike(story.id)}>Like</button>}\n                    </div>\n                    {(index + 1) % 5 === 0 && (\n                        <div className='card individual-card' key={`meme-${index}`}>\n                            <img src={storyMemes[index]} alt=\"Meme\" style={{ height: '100%' }} />\n                        </div>\n                    )}\n                </>\n            ))}\n        </div>\n    );\n}\n\nexport default Posts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}