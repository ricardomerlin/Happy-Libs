{"ast":null,"code":"var _jsxFileName = \"/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AdjectiveForm from './AdjectiveForm';\nimport Posts from './Posts';\nimport Modal from 'react-modal';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction App() {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [defaultStory, setDefaultStory] = useState('');\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const [stories, setStories] = useState([]);\n  const [isTop, setIsTop] = useState(true);\n  useEffect(() => {\n    const checkScroll = () => {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      const windowHeight = window.innerHeight;\n      setIsTop(Math.min(1, scrollTop / windowHeight));\n    };\n    checkScroll();\n    window.addEventListener('scroll', checkScroll);\n    return () => {\n      window.removeEventListener('scroll', checkScroll);\n    };\n  }, []);\n  useEffect(() => {\n    getStories();\n  }, []);\n  function getStories() {\n    fetch('http://127.0.0.1:5555/stories').then(response => response.json()).then(data => setStories(data));\n  }\n  useEffect(() => {\n    if (modalIsOpen === true) {\n      document.body.classList.add('no-scroll');\n    } else if (modalIsOpen === false) {\n      document.body.classList.remove('no-scroll');\n    }\n  }, [modalIsOpen]);\n  function handleDefaultStorySubmit(e) {\n    e.preventDefault();\n    setSubmitSuccess(true);\n    fetch('http://127.0.0.1:5555/default_stories', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"content\": defaultStory\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-container\",\n      style: {\n        opacity: isTop ? 0 : 1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"HappyLibs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: '5em'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"main-text\",\n        children: \"Welcome to HappyLibs! The idea here is simple - plug in the corresponding word type with what is requested above the text boxes and hit submit to generate a random story. If you are confused about any definitions, hover over the word type for a brief definition and examples.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Interested in submitting your own story template for others to use in the future?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"open-modal-button\",\n          onClick: () => setModalIsOpen(true),\n          children: \"Click here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(AdjectiveForm, {\n          getStories: getStories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Posts, {\n          stories: stories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: modalIsOpen,\n        onRequestClose: () => setModalIsOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Modal Body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleDefaultStorySubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            style: {\n              width: '100%',\n              height: '200px'\n            },\n            placeholder: \"Enter your story here...\",\n            onChange: e => setDefaultStory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), submitSuccess ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Submitted!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setModalIsOpen(false);\n              setSubmitSuccess(false);\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0Wzj+MHxgVZ/CeVvFc62xKK6vdE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AdjectiveForm","Posts","Modal","jsxDEV","_jsxDEV","setAppElement","App","_s","modalIsOpen","setModalIsOpen","defaultStory","setDefaultStory","submitSuccess","setSubmitSuccess","stories","setStories","isTop","setIsTop","checkScroll","scrollTop","window","pageYOffset","document","documentElement","windowHeight","innerHeight","Math","min","addEventListener","removeEventListener","getStories","fetch","then","response","json","data","body","classList","add","remove","handleDefaultStorySubmit","e","preventDefault","method","headers","JSON","stringify","ok","Error","status","className","children","style","opacity","fileName","_jsxFileName","lineNumber","columnNumber","paddingTop","onClick","display","isOpen","onRequestClose","onSubmit","width","height","placeholder","onChange","target","value","_c","$RefreshReg$"],"sources":["/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AdjectiveForm from './AdjectiveForm';\nimport Posts from './Posts';\nimport Modal from 'react-modal';\nimport '../App.css';\n\nModal.setAppElement('#root')\n\nfunction App() {\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [defaultStory, setDefaultStory] = useState('');\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const [stories, setStories] = useState([]);\n  const [isTop, setIsTop] = useState(true);\n\n  useEffect(() => {\n    const checkScroll = () => {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      const windowHeight = window.innerHeight;\n      setIsTop(Math.min(1, scrollTop / windowHeight));\n    };\n  \n    checkScroll();\n  \n    window.addEventListener('scroll', checkScroll);\n    return () => {\n      window.removeEventListener('scroll', checkScroll);\n    };\n  }, []);\n\n  useEffect(() => {\n    getStories()\n  }, [])\n  \n  function getStories() {\n    fetch('http://127.0.0.1:5555/stories')\n      .then(response => response.json())\n      .then(data => setStories(data))\n  }\n\n  useEffect(() => {\n      if (modalIsOpen === true) {\n          document.body.classList.add('no-scroll')\n      } else if (modalIsOpen === false) {\n          document.body.classList.remove('no-scroll')\n      }\n  }, [modalIsOpen])\n\n  function handleDefaultStorySubmit(e) {\n      e.preventDefault();\n      setSubmitSuccess(true);\n      fetch('http://127.0.0.1:5555/default_stories', {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n              \"content\": defaultStory\n          })\n      })\n      .then(response => {\n          if (!response.ok) {\n              throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n      })\n      }\n\n  return (\n    <div className='App'>\n      <div className='title-container' style={{ opacity: isTop ? 0 : 1 }}>\n        <h1 className='text-center'>HappyLibs</h1>\n      </div>\n      <div style={{ paddingTop: '5em' }}> \n      <h3 className='main-text'>Welcome to HappyLibs! The idea here is simple - plug in the corresponding word type with what is requested above the text boxes and hit submit to generate a random story. If you are confused about any definitions, hover over the word type for a brief definition and examples.</h3>\n        <br></br>\n        <div className='open-modal'>\n          <p>Interested in submitting your own story template for others to use in the future?</p>\n          <button className='open-modal-button' onClick={() => setModalIsOpen(true)}>Click here!</button>\n        </div>\n        <div style={{ display: 'block' }}>\n          <AdjectiveForm getStories={getStories}/>\n          <Posts stories={stories}/>\n        </div>\n        <Modal \n        isOpen={modalIsOpen} \n        onRequestClose={() => setModalIsOpen(false)}>\n          <h2></h2>\n          <p>Modal Body</p>\n          <form onSubmit={handleDefaultStorySubmit}>\n            <textarea \n              style={{width: '100%', height: '200px'}} \n              placeholder=\"Enter your story here...\"\n              onChange={(e) => setDefaultStory(e.target.value)}\n            />\n            {submitSuccess ? <p>Submitted!</p> : <button>Submit</button>}\n          </form>\n          <div>\n            <button onClick={() => {\n              setModalIsOpen(false);\n              setSubmitSuccess(false);\n            }}>Close</button>\n          </div>\n        </Modal>\n      </div>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}