{"ast":null,"code":"var _jsxFileName = \"/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/AdjectiveForm.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdjectiveForm() {\n  function handleFormSubmit(e) {}\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"questionnaire\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      title: \"A singular noun refers to only one person, place, or thing. Some examples include a cat, an idea, a fruit - just make sure to only have 1!\",\n      children: [\"Noun(singular)\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-1-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      title: \"A plural noun refers to more than one person, place, or thing. Examples include 'cats', 'ideas', 'fruits'.\",\n      children: [\"Noun (plural):\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-2-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      title: \"A past tense verb is a verb that indicates an action, event, or condition that occurred in the past. For example, 'ran', 'saw', 'was'.\",\n      children: [\"Verb (past tense):\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-3-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      title: \"An adjective is a word that describes or modifies a noun. It can describe qualities such as size, color, feeling, and more. Examples include 'happy', 'blue', 'large'.\",\n      children: [\"Adjective:\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-4-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      title: \"An adjective is a word that describes or modifies a noun. It can describe qualities such as size, color, feeling, and more. Examples include 'happy', 'blue', 'large'.\",\n      children: [\"Adjective:\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"question-5-input\",\n          type: \"text\",\n          placeholder: \"answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = AdjectiveForm;\nexport default AdjectiveForm;\nvar _c;\n$RefreshReg$(_c, \"AdjectiveForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdjectiveForm","handleFormSubmit","e","id","children","title","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ricardomerlin/coding-projects/HappyLibs/frontend/src/components/AdjectiveForm.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nfunction AdjectiveForm() {\n\n    function handleFormSubmit(e) {\n\n    }\n\n\n    return (\n        <form id=\"questionnaire\">\n            <li title=\"A singular noun refers to only one person, place, or thing. Some examples include a cat, an idea, a fruit - just make sure to only have 1!\">Noun(singular)\n                <p>\n                    <input id=\"question-1-input\" type=\"text\" placeholder=\"answer\"/>\n                </p>\n            </li>\n            <li title=\"A plural noun refers to more than one person, place, or thing. Examples include 'cats', 'ideas', 'fruits'.\">Noun (plural):\n                <p>\n                    <input id=\"question-2-input\" type=\"text\" placeholder=\"answer\"/>\n                </p>\n            </li>\n            <li title=\"A past tense verb is a verb that indicates an action, event, or condition that occurred in the past. For example, 'ran', 'saw', 'was'.\">Verb (past tense):\n                <p>\n                    <input id=\"question-3-input\" type=\"text\" placeholder=\"answer\"/>\n                </p>\n            </li>\n            <li title=\"An adjective is a word that describes or modifies a noun. It can describe qualities such as size, color, feeling, and more. Examples include 'happy', 'blue', 'large'.\">Adjective:\n                <p>\n                    <input id=\"question-4-input\" type=\"text\" placeholder=\"answer\"/>\n                </p>\n            </li>\n            <li title=\"An adjective is a word that describes or modifies a noun. It can describe qualities such as size, color, feeling, and more. Examples include 'happy', 'blue', 'large'.\">Adjective:\n                <p>\n                    <input id=\"question-5-input\" type=\"text\" placeholder=\"answer\"/>\n                </p>\n            </li>\n            <p>\n                <button>Submit</button>\n            </p>\n        </form>\n    );\n}\n\nexport default AdjectiveForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}